{"version":3,"sources":["components/Header.js","utils/utils.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","target","aria-label","title","apiData","api","options","this","baseUrl","authToken","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_handleResponse","newCard","method","body","JSON","stringify","cardId","isLiked","userData","name","about","avatar","Card","card","onCardClick","style","backgroundImage","link","onClick","type","likes","length","Main","onEditProfile","onAddPlace","onEditAvatar","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","catch","err","console","log","getCards","items","map","item","_id","Footer","PopupWithForm","isOpen","onClose","onSubmit","children","document","addEventListener","evt","key","currentTarget","noValidate","ImagePopup","src","alt","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","placeholder","required","value","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a2abb5d1.chunk.js","sourcesContent":["function Header() {\r\n  return (\r\n    <header className='header section section_centered'>\r\n      <a href='/' target='_self'>\r\n        <div\r\n          className='header__logo'\r\n          aria-label='Логотип'\r\n          title='Mesto Russia'\r\n        />\r\n      </a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const apiData = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-22',\r\n  authToken: 'de47b0cf-2796-425b-8528-a1fb4932903a',\r\n};\r\n","import {apiData} from \"./utils\";\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.authToken = options.authToken;\r\n  }\r\n\r\n  _handleResponse(res) {\r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      headers: {\r\n        authorization: this.authToken,\r\n      },\r\n    }).then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  addCard(newCard) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this.authToken,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newCard),\r\n    }).then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this.authToken,\r\n      },\r\n    }).then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  toggleLikeCard(cardId, isLiked) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n      method: `${isLiked ? 'DELETE' : 'PUT'}`,\r\n      headers: {\r\n        authorization: this.authToken,\r\n      },\r\n    }).then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: {\r\n        authorization: this.authToken,\r\n      },\r\n    }).then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  updateUserInfo(userData) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this.authToken,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: userData.name,\r\n        about: userData.about,\r\n      }),\r\n    }).then((res) => this._handleResponse(res));\r\n  }\r\n\r\n  updateUserAvatar(userData) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this.authToken,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: userData.avatar,\r\n      }),\r\n    }).then((res) => this._handleResponse(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: apiData.baseUrl,\r\n  authToken: apiData.authToken,\r\n});\r\n\r\nexport default api","import React from 'react';\r\n\r\nfunction Card({ card, onCardClick }) {\r\n  function handleCardClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  return (\r\n    <li className='element'>\r\n      <div\r\n        style={{ backgroundImage: `url(${card.link})` }}\r\n        className='element__image'\r\n        onClick={handleCardClick}\r\n      />\r\n      <button\r\n        className='trash-button'\r\n        type='button'\r\n        aria-label='Удалить'\r\n        name='delete'\r\n      />\r\n      <div className='element__bottom-container'>\r\n        <h2 className='element__title'>{card.name}</h2>\r\n        <div className='element__like-container'>\r\n          <button\r\n            className='element__like-button'\r\n            type='button'\r\n            aria-label='Мне нравится'\r\n            name='like'\r\n          />\r\n          <span\r\n            className={`element__like-counter ${\r\n              card.likes.length === 0 && 'element__like-counter_hidden'\r\n            }`}\r\n          >\r\n            {card.likes.length}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick }) {\r\n  const [userName, setUserName] = useState();\r\n  const [userDescription, setUserDescription] = useState();\r\n  const [userAvatar, setUserAvatar] = useState();\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then(res => {\r\n        setUserName(res.name);\r\n        setUserDescription(res.about);\r\n        setUserAvatar(res.avatar);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getCards()\r\n      .then(items => {\r\n        setCards(items);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <main className='main'>\r\n      <section className='profile section section_centered'>\r\n        <div className='profile__avatar-container' onClick={onEditAvatar}>\r\n          <div\r\n            style={{ backgroundImage: `url(${userAvatar})` }}\r\n            className='profile__avatar'\r\n          />\r\n        </div>\r\n\r\n        <div className='profile__info'>\r\n          <div className='profile__name-container'>\r\n            <h1 className='profile__name'>{userName}</h1>\r\n            <button\r\n              className='profile__edit-button'\r\n              type='button'\r\n              aria-label='Редактировать профиль'\r\n              onClick={onEditProfile}\r\n            />\r\n          </div>\r\n          <p className='profile__description'>{userDescription}</p>\r\n        </div>\r\n        <button\r\n          className='profile__add-button'\r\n          type='button'\r\n          aria-label='Добавить фото'\r\n          name='add-card'\r\n          onClick={onAddPlace}\r\n        />\r\n      </section>\r\n      <section\r\n        className='section section_centered'\r\n        aria-label='Фотографии пользователя'\r\n      >\r\n        <ul className='elements'>\r\n          {cards.map(item => (\r\n            <Card key={item._id} card={item} onCardClick={onCardClick} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","function Footer() {\r\n  return (\r\n    <footer className='footer section section_centered'>\r\n      <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\n\r\nfunction PopupWithForm({ title, name, isOpen, onClose, onSubmit, children }) {\r\n  useEffect(() => {\r\n    function handleEscClose(evt) {\r\n      if (evt.key === 'Escape') onClose();\r\n    }\r\n\r\n    document.addEventListener('keydown', handleEscClose);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function handleClickOnOverlay(evt) {\r\n    evt.target === evt.currentTarget && onClose();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`popup popup_type_${name}${isOpen ? ' popup_open' : ''}`}\r\n      onClick={handleClickOnOverlay}\r\n    >\r\n      <div className='popup__container popup__container_type_form'>\r\n        <button\r\n          className='popup__button-close'\r\n          type='button'\r\n          aria-label='Закрыть попап'\r\n          onClick={onClose}\r\n        />\r\n        <form\r\n          className='form form_edit'\r\n          name={name}\r\n          onSubmit={onSubmit}\r\n          noValidate\r\n        >\r\n          <h2 className='form__title'>{title}</h2>\r\n          {children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useEffect } from 'react';\r\n\r\nfunction ImagePopup({ card, isOpen, onClose }) {\r\n  useEffect(() => {\r\n    function handleEscClose(evt) {\r\n      if (evt.key === 'Escape') onClose();\r\n    }\r\n\r\n    document.addEventListener('keydown', handleEscClose);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function handleClickOnOverlay(evt) {\r\n    evt.target === evt.currentTarget && onClose();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`popup popup_type_big-picture${isOpen ? ' popup_open' : ''}`}\r\n      onClick={handleClickOnOverlay}\r\n    >\r\n      <div className='popup__container'>\r\n        <button\r\n          className='popup__button-close'\r\n          type='button'\r\n          aria-label='Закрыть попап'\r\n          onClick={onClose}\r\n        />\r\n        <figure className='figure'>\r\n          <img src={card.link} alt={card.name} className='big-image' />\r\n          <figcaption className='big-image-caption'>{card.name}</figcaption>\r\n        </figure>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n\r\n  /*const [currentUser, setCurrentUser] = useState()\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((res) => {\r\n        setCurrentUser(res)\r\n      })\r\n      .catch((err) => console.log(err));\r\n  },[]);*/\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    setIsImagePopupOpen(true);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsImagePopupOpen(false);\r\n    setSelectedCard({});\r\n  }\r\n\r\n  /*function handleAddPlaceSubmit (evt) {\r\n    evt.preventDefault();\r\n    const newCard = {\r\n      name: evt.target.querySelector('.place-name').value,\r\n      link: evt.target.querySelector('.place-link').value,\r\n    }\r\n    api\r\n      .addCard(newCard)\r\n      .then((res) => {\r\n        //setCards([...cards, newCard]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }*/\r\n  return (\r\n    <div className='page'>\r\n      <Header />\r\n      <Main\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onCardClick={handleCardClick}\r\n      />\r\n      <Footer />\r\n      <PopupWithForm\r\n        name='update-avatar'\r\n        title='Обновить аватар'\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <input\r\n          type='url'\r\n          id='profile-avatar'\r\n          className='form__input'\r\n          name='avatar'\r\n          placeholder='Ссылка на изображение'\r\n          required\r\n        />\r\n        <span className='form__input-error profile-avatar-input-error' />\r\n        <button\r\n          className='form__button'\r\n          type='submit'\r\n          aria-label='Сохранить'\r\n          value='Сохранить'\r\n          name='avatar-save'\r\n        >\r\n          Сохранить\r\n        </button>\r\n      </PopupWithForm>\r\n      <PopupWithForm\r\n        name='edit-form'\r\n        title='Редактировать профиль'\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <input\r\n          type='text'\r\n          id='profile-name'\r\n          className='form__input form__input_type_name'\r\n          name='name'\r\n          placeholder='Имя'\r\n          minLength='2'\r\n          maxLength='40'\r\n          required\r\n        />\r\n        <span className='form__input-error profile-name-input-error' />\r\n        <input\r\n          type='text'\r\n          id='profile-description'\r\n          className='form__input form__input_type_description'\r\n          name='about'\r\n          placeholder='О себе'\r\n          minLength='2'\r\n          maxLength='200'\r\n          required\r\n        />\r\n        <span className='form__input-error profile-description-input-error' />\r\n        <button\r\n          className='form__button'\r\n          type='submit'\r\n          aria-label='Сохранить профиль'\r\n          value='Сохранить'\r\n          name='profile-save'\r\n        >\r\n          Сохранить\r\n        </button>\r\n      </PopupWithForm>\r\n      <PopupWithForm\r\n        name='add-card-form'\r\n        title='Новое место'\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n        /*onSubmit={handleAddPlaceSubmit}*/\r\n      >\r\n        <input\r\n          type='text'\r\n          id='place-name'\r\n          className='form__input place-name'\r\n          name='name'\r\n          placeholder='Название'\r\n          minLength='2'\r\n          maxLength='30'\r\n          required\r\n        />\r\n        <span className='form__input-error place-name-input-error' />\r\n        <input\r\n          type='url'\r\n          id='place-img-src'\r\n          className='form__input place-link'\r\n          name='link'\r\n          placeholder='Ссылка на картинку'\r\n          required\r\n        />\r\n        <span className='form__input-error place-img-src-input-error' />\r\n        <button\r\n          className='form__button'\r\n          type='submit'\r\n          aria-label='Создать новую карточку'\r\n          value='Создать'\r\n          name='create-card'\r\n        >\r\n          Создать\r\n        </button>\r\n      </PopupWithForm>\r\n      <ImagePopup\r\n        card={selectedCard}\r\n        isOpen={isImagePopupOpen}\r\n        onClose={closeAllPopups}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}